---
AWSTemplateFormatVersion: 2010-09-09
Description: Consumer 2 account Lake Formation setup for data mesh architecture. 

Parameters:
  ConsumerAdminUsername:
    Type: String
    Description: IAM user name to be created for consumer admin.
    Default: ConsumerAdmin
    AllowedPattern: '[\w+=,.@-]+'
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Name must be between 1 and 64 characters
  ConsumerAdminPassword:
    Type: String
    Description: >-
      Password for Consumer Admin user. Should be a min. of 8 characters, include
      a min. of three of the following mix of character types: uppercase,
      lowercase, numbers, non-alphanumeric symbols, for example
      !@#$%^&*()_+-[]{}|??? and not be identical to your AWS account name or
      email address
    NoEcho: 'true'
    AllowedPattern: >-
      ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+-\[\]\{\}|???])[A-Za-z\d!@#$%^&*()_+-\[\]\{\}|???]{8,}$
    ConstraintDescription: >-
      Password should be a min. of 8 characters, include a min. of three of the
      following mix of character types: uppercase, lowercase, numbers,
      non-alphanumeric symbols
  ConsumerAnalystUsername:
    Type: String
    Description: IAM user name to be created for consumer analyst.
    Default: ConsumerAnalyst
    AllowedPattern: '[\w+=,.@-]+'
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: Name must be between 1 and 64 characters
  ConsumerAnalystPassword:
    Type: String
    Description: >-
      Password for Consumer Analyst user. Should be a min. of 8 characters, include
      a min. of three of the following mix of character types: uppercase,
      lowercase, numbers, non-alphanumeric symbols, for example
      !@#$%^&*()_+-[]{}|??? and not be identical to your AWS account name or
      email address
    NoEcho: 'true'
    AllowedPattern: >-
      ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+-\[\]\{\}|???])[A-Za-z\d!@#$%^&*()_+-\[\]\{\}|???]{8,}$
    ConstraintDescription: >-
      Password should be a min. of 8 characters, include a min. of three of the
      following mix of character types: uppercase, lowercase, numbers,
      non-alphanumeric symbols

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: IAM User Configuration
        Parameters:
          - ConsumerAdminUsername
          - ConsumerAdminPassword
          - ConsumerAnalystUsername
          - ConsumerAnalystPassword

Resources:
  AthenaLogsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-athena-logs"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Name: "consumer-workgroup"
      State: ENABLED
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub 's3://${AthenaLogsBucket}/'

  ConsumerAdminGroup:
    Type: AWS::IAM::Group
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin

  ConsumerAdminUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref ConsumerAdminUsername
      LoginProfile:
        Password: !Ref ConsumerAdminPassword
      Groups:
        - !Ref ConsumerAdminGroup

  ConsumerAnalystGroup:
    Type: AWS::IAM::Group
    Properties:
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:ListMultipartUploadParts
                  - s3:AbortMultipartUpload
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:PutBucketPublicAccessBlock
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${AthenaLogsBucket}/'
                  - !Sub 'arn:aws:s3:::${AthenaLogsBucket}/*'
              - Action:
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                  - Lakeformation:GetDataAccess
                  - athena:ListWorkGroups
                  - glue:Get*
                Effect: Allow
                Resource: '*'
              - Action:
                  - athena:BatchGetNamedQuery
                  - athena:BatchGetQueryExecution
                  - athena:CreateNamedQuery
                  - athena:CreatePreparedStatement
                  - athena:DeleteNamedQuery
                  - athena:DeletePreparedStatement
                  - athena:GetNamedQuery
                  - athena:GetPreparedStatement
                  - athena:GetQueryExecution
                  - athena:GetQueryResults
                  - athena:GetQueryResultsStream
                  - athena:GetWorkGroup
                  - athena:ListNamedQueries
                  - athena:ListPreparedStatements
                  - athena:ListQueryExecutions
                  - athena:StartQueryExecution
                  - athena:StopQueryExecution
                  - athena:UpdatePreparedStatement
                Effect: Allow
                Resource:
                  !Sub 'arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${AthenaWorkgroup}'
            Version: '2012-10-17'
          PolicyName: Policy

  ConsumerAnalystUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref ConsumerAnalystUsername
      LoginProfile:
        Password: !Ref ConsumerAnalystPassword
      Groups:
        - !Ref ConsumerAnalystGroup

  LFDataLakeSettings:
    Type: AWS::LakeFormation::DataLakeSettings
    Properties:
      Admins:
        - DataLakePrincipalIdentifier: !GetAtt 'ConsumerAdminUser.Arn'
